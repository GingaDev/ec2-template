# Define the name of the GitHub Action workflow
name: Create an ec2 instance
# This workflow is manually triggered using the GitHub Actions UI
on:
  workflow_dispatch:
    # Define inputs that are required for the manual trigger
    inputs:
      instanceName:
        description: 'Name of the AWS Instance'  # What's this input for?
        required: true  # Is it optional or required?
      awsRegion:
        description: 'AWS Region for the instance'
        required: true
      instanceType:
        description: 'AWS instance type'
        required: true
      action:
        description: 'Action to perform (apply/destroy)'
        required: true
# Jobs to be executed in this workflow
jobs:
  # Job for applying the ec2 instance
  apply_ec2:
    # Use the latest Ubuntu runner
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.action == 'apply' }}
    steps:
    
    # checkout the code from the repository
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        #aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        
    - name: Terraform Init
      run: terraform init
      working-directory: .
      
    - name: Terraform FMT
      run: terraform fmt
      working-directory: .
      
      
    # Destroy all resources 
    #- name: Terraform Destroy
    #- name: terraform apply
    #  run: terraform destroy -var instanceName=${{ github.event.inputs.instanceName }} -var awsRegion=${{ github.event.inputs.awsRegion }} -auto-approve
    #  working-directory: .